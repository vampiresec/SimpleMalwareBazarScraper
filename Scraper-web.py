#!/usr/bin/python
import requests # for web requests
import lxml.html as lh # Retriving tables form website
import pandas as pd 
from bs4 import BeautifulSoup # For parsing the html 

baseurl = "https://bazaar.abuse.ch"
SearchMalwareFamily = str(input("Enter Malware Family: "))
url=baseurl+"/browse.php?search=tag%3A"+SearchMalwareFamily

print("Retrieving %s Malware samples...."%(SearchMalwareFamily))
#Making the request to website
page = requests.get(url)
#Store the contents of the website under doc
doc = lh.fromstring(page.content)
#Parse data that are stored between <tr>..</tr> of HTML
tr_elements = doc.xpath('//tr')

#Create empty list
col=[]
i=0
#For each row, store each first element (header) and an empty list
#Assigning column names 
for t in tr_elements[0]:
    i+=1
    name=t.text_content()
    col.append((name,[]))

for j in range(1,len(tr_elements)):
    #T is our j'th row
    T=tr_elements[j]
    
    #If row is not of size 7, the //tr data is not from our table 
    if len(T)!=7    :
        break
    
    #i is the index of our column
    i=0
    
    #Iterate through each element of the row
    for t in T.iterchildren():
        data=t.text_content()
        #Check if row is empty
        if i>0:
        #Convert any numerical value to integers
            try:
                data=int(data)
            except:
                pass
        if i==6:
            break
        #Append the data to the empty list of the i'th column
        col[i][1].append(data)
        #Increment i for the next column
        i+=1


#retriving the Download links 
soup = BeautifulSoup(page.text,'html.parser')
download_linkes= soup.find_all('a',{"class":"badge badge-secondary"})

print("Total Retrived Malwares: %s"%len(download_linkes))

#Add the download links to to list
for link in download_linkes:
    col[6][1].append(baseurl+link['href']) 

#Making Dictionary so that we can form dataframe
Dict={title:column for (title,column) in col}
#Creating Dataframe from Dictionary
df=pd.DataFrame(Dict)
#Saving dataframe in the form of csv
df.to_csv("Malware-Bazar-%s-scraped.csv"%(SearchMalwareFamily))
print("Success....")

